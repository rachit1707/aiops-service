<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_0xifhl4" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.15.1" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.19.0">
  <bpmn:process id="cloud-jira-connector" name="cloud-jira-connector" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_0sull9j</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:endEvent id="Event_0t9zd16">
      <bpmn:incoming>Flow_0m05h2e</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:scriptTask id="Activity_0lf6lkp" name="Create Jira Ticket" scriptFormat="groovy">
      <bpmn:incoming>Flow_0sull9j</bpmn:incoming>
      <bpmn:outgoing>Flow_0m05h2e</bpmn:outgoing>
      <bpmn:script>import java.net.Proxy.Type
import groovy.json.JsonSlurper

def ticket_description = execution.getVariable('ticket_description')
def ticket_summary = execution.getVariable('ticket_summary')
def priority = execution.getVariable('priority')
def acceptance_criteria = execution.getVariable('acceptance_criteria')
def reporter = execution.getVariable('reporter')
def assignee = execution.getVariable('assignee')

def jira_ip = execution.getVariable('jira_ip')
def jira_authorizarion = execution.getVariable('jira_authorizarion')
def proxy_ip = execution.getVariable('proxy_ip')
def proxy_port = execution.getVariable('proxy_port')
def post = null

if(proxy_ip != null &amp;&amp; proxy_port != null) {
  Proxy proxy = new Proxy(Type.HTTP, new InetSocketAddress(proxy_ip, Integer.parseInt(proxy_port)))
  post = new URL(jira_ip).openConnection(proxy)
} else {
  post = new URL(jira_ip).openConnection()
}

// Proxy proxy = new Proxy(Type.HTTP, new InetSocketAddress("139.7.95.77", 8080))
// def post = new URL("https://gno-poc.atlassian.net/rest/api/3/issue").openConnection(proxy)

def message = '''{
  "fields": {
    "description": {
      "content": [
        {
          "content": [
            {
              "text": "'''+ticket_description+'''",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "type": "doc",
      "version": 1
    },
    "issuetype": {
      "id": "10001"
    },
    "customfield_10039": {
      "value": "'''+priority+'''"
    },    
    "customfield_10041": {
      "content": [
        {
          "content": [
            {
              "text": "'''+acceptance_criteria+'''",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "type": "doc",
      "version": 1
    },  
    "reporter": {
      "accountId": "'''+reporter+'''"
    },
    "assignee" :{
      "accountId": "'''+assignee+'''"
    },
    "project": {
      "id": "10000"
    },
    "summary": "'''+ticket_summary+'''"
  },
  "update": {}
}'''

println("Input request========"+message)
post.setRequestMethod("POST")
post.setDoOutput(true)
post.setRequestProperty("Accept", "application/json")
post.setRequestProperty("Content-Type", "application/json")
// post.setRequestProperty("Authorization", "Basic dHlwZXRvbWFoYW50ZXNoQGdtYWlsLmNvbTpBVEFUVDN4RmZHRjB4U3I0YXVOdmN2QXRDYk5Xa3NPem1PcDFGS25kaWNEVUtkR3FQM3FDaVVUZF9TTFAzYVJHWlBaWHRnZHhJZFhDMm05MVE3ZjdDMzlXTHRZeDJHam5oMDNUcEZlOXdNSURqd1lrbDVYMm5nckZrdnRrT1p6TkJ3Qm1HdjEzWWpCaTVLaTlxZ1hCbnJ1ajk4MnZHSjNnTDN0RU15dWJ2REFYMC1CQ0RXUEl6Vm89MzEwREJFMzg=")
post.setRequestProperty("Authorization", jira_authorizarion)
post.getOutputStream().write(message.getBytes("UTF-8"));

def postRC = post.getResponseCode();
response = post.getInputStream().getText()

execution.setVariable('response', response)
execution.setVariable('respons_code', postRC)
println('Jira Ticket Creation Status======='+postRC)
def jsonSlurper = new JsonSlurper()
//def response_json = jsonSlurper.parseText(response)
//ticket_id = response_json["key"]

//execution.setVariable("ticket_id", ticket_id)</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_0sull9j" sourceRef="StartEvent_1" targetRef="Activity_0lf6lkp" />
    <bpmn:sequenceFlow id="Flow_0m05h2e" sourceRef="Activity_0lf6lkp" targetRef="Event_0t9zd16" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="cloud-jira-connector">
      <bpmndi:BPMNShape id="Activity_18xqupc_di" bpmnElement="Activity_0lf6lkp">
        <dc:Bounds x="290" y="77" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0t9zd16_di" bpmnElement="Event_0t9zd16">
        <dc:Bounds x="462" y="99" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="172" y="99" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_0sull9j_di" bpmnElement="Flow_0sull9j">
        <di:waypoint x="208" y="117" />
        <di:waypoint x="290" y="117" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0m05h2e_di" bpmnElement="Flow_0m05h2e">
        <di:waypoint x="390" y="117" />
        <di:waypoint x="462" y="117" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
